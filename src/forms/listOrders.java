package forms;

import Data.User;
import Data.Work;
import Database.Users;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import java.util.List;
import Database.Orders;

/**
 *
 * @author Naveen
 */
public class listOrders extends javax.swing.JFrame {


    
    private User engineer=null;
    
    public void setEngineer(User engineer){
       this.engineer=engineer;
    }
    
    public listOrders(User engineer) {
         
        setEngineer(engineer);
        initComponents();
       // setEngineer(engineer);
        
        this.setLocationRelativeTo(null);
        String[] columnNames = {"ID", "CUSTOMER ID", "WORK TYPE", "ADDRESS","WORK DATE","ROOMS","ENGINEER ID"};
        DefaultTableModel newTableModel=new DefaultTableModel();
        newTableModel.setColumnCount(9);
        newTableModel.setColumnIdentifiers(columnNames);
        //jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTable1.setFillsViewportHeight(true);        
        jTable1.setModel(newTableModel);

/*        JScrollPane scroll=new JScrollPane(jTable1);
        scroll.setHorizontalScrollBarPolicy(
                JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        scroll.setVerticalScrollBarPolicy(
                JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
  */      
        
        Orders dbHandler=new Orders();
        
        if(this.engineer==null){
        List<Work> listOfUsers=dbHandler.getAllWorks();
        if(listOfUsers !=null){
            for(Work work : listOfUsers){
                newTableModel.addRow(new Object[]{work.getId(),work.getCustomerId(),work.getWorkType(),work.getAddress(),work.getWorkDate(),work.getNoOfRooms(),work.getEngineerId()});
            }
        }}else{
            
        List<Work> listOfUsers=dbHandler.getAllWorks(this.engineer.getId());
        if(listOfUsers !=null){
            for(Work work : listOfUsers){
                newTableModel.addRow(new Object[]{work.getId(),work.getCustomerId(),work.getWorkType(),work.getAddress(),work.getWorkDate(),work.getNoOfRooms(),work.getEngineerId()});
            }
        }  
        }
    }
    
    public listOrders() {
    
        setEngineer(engineer);
        initComponents();
        this.setLocationRelativeTo(null);
        String[] columnNames = {"ID", "CUSTOMER ID", "WORK TYPE", "ADDRESS","WORK DATE","ROOMS","ENGINEER ID","WORK STATUS"};
        DefaultTableModel newTableModel=new DefaultTableModel();
        newTableModel.setColumnCount(9);
        newTableModel.setColumnIdentifiers(columnNames);
        //jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTable1.setFillsViewportHeight(true);        
        jTable1.setModel(newTableModel);

/*        JScrollPane scroll=new JScrollPane(jTable1);
        scroll.setHorizontalScrollBarPolicy(
                JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        scroll.setVerticalScrollBarPolicy(
                JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
  */      
        
        Orders dbHandler=new Orders();
        
        
        if(this.engineer==null){
        List<Work> listOfUsers=dbHandler.getAllWorks();
        if(listOfUsers !=null){
            for(Work work : listOfUsers){
                newTableModel.addRow(new Object[]{work.getId(),work.getCustomerId(),work.getWorkType(),work.getAddress(),work.getWorkDate(),work.getNoOfRooms(),work.getEngineerId()});
            }
        }}else{
            
        List<Work> listOfUsers=dbHandler.getAllWorks(engineer.getId());
        if(listOfUsers !=null){
            for(Work work : listOfUsers){
                newTableModel.addRow(new Object[]{work.getId(),work.getCustomerId(),work.getWorkType(),work.getAddress(),work.getWorkDate(),work.getNoOfRooms(),work.getEngineerId()});
            }
        }  
        }
    }
     
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("List Of Work Orders");
        setResizable(false);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 852, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(listOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(listOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(listOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(listOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new listOrders().setVisible(true);
            }
        });
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
